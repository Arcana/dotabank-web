"""First alembic commit for Dotabank

Revision ID: ddf8cb2d4e1
Revises: None
Create Date: 2014-06-20 20:13:18.740324

"""

# revision identifiers, used by Alembic.
revision = 'ddf8cb2d4e1'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ugcfiles',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('filename', sa.String(length=80), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('url', sa.String(length=140), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('first_seen', sa.DateTime(), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.Column('show_ads', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gc_workers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=32), nullable=False),
    sa.Column('password', sa.BLOB(), nullable=False),
    sa.Column('display_name', sa.String(length=32), nullable=False),
    sa.Column('auth_code', sa.String(length=32), nullable=True),
    sa.Column('sentry', sa.BLOB(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('replays',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('local_uri', sa.String(length=128), nullable=True),
    sa.Column('state', sa.Enum('WAITING_GC', 'WAITING_DOWNLOAD', 'DOWNLOAD_IN_PROGRESS', 'ARCHIVED', 'GC_ERROR', 'DOWNLOAD_ERROR'), nullable=True),
    sa.Column('gc_fails', sa.Integer(), nullable=True),
    sa.Column('dl_fails', sa.Integer(), nullable=True),
    sa.Column('added_to_site_time', sa.DateTime(), nullable=True),
    sa.Column('gc_done_time', sa.DateTime(), nullable=True),
    sa.Column('dl_done_time', sa.DateTime(), nullable=True),
    sa.Column('replay_state', sa.Enum('REPLAY_AVAILABLE', 'REPLAY_NOT_RECORDED', 'REPLAY_EXPIRED', 'UNKNOWN'), nullable=True),
    sa.Column('replay_cluster', sa.Integer(), nullable=True),
    sa.Column('replay_salt', sa.Integer(), nullable=True),
    sa.Column('game_mode', sa.SmallInteger(), nullable=True),
    sa.Column('match_seq_num', sa.Integer(), nullable=True),
    sa.Column('lobby_type', sa.SmallInteger(), nullable=True),
    sa.Column('league_id', sa.Integer(), nullable=True),
    sa.Column('series_id', sa.Integer(), nullable=True),
    sa.Column('series_type', sa.Integer(), nullable=True),
    sa.Column('good_guys_win', sa.Boolean(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.Integer(), nullable=True),
    sa.Column('first_blood_time', sa.Integer(), nullable=True),
    sa.Column('human_players', sa.Integer(), nullable=True),
    sa.Column('radiant_tower_status', sa.Integer(), nullable=True),
    sa.Column('dire_tower_status', sa.Integer(), nullable=True),
    sa.Column('radiant_barracks_status', sa.Integer(), nullable=True),
    sa.Column('dire_barracks_status', sa.Integer(), nullable=True),
    sa.Column('radiant_team_id', sa.Integer(), nullable=True),
    sa.Column('radiant_team_name', sa.String(length=80), nullable=True),
    sa.Column('radiant_team_logo', sa.BigInteger(), nullable=True),
    sa.Column('radiant_team_tag', sa.String(length=80), nullable=True),
    sa.Column('radiant_team_complete', sa.Boolean(), nullable=True),
    sa.Column('dire_team_id', sa.Integer(), nullable=True),
    sa.Column('dire_team_name', sa.String(length=80), nullable=True),
    sa.Column('dire_team_logo', sa.BigInteger(), nullable=True),
    sa.Column('dire_team_tag', sa.String(length=80), nullable=True),
    sa.Column('dire_team_complete', sa.Boolean(), nullable=True),
    sa.Column('radiant_guild_id', sa.Integer(), nullable=True),
    sa.Column('dire_guild_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gc_jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('worker_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('SHITS_BROKE', 'MATCH_REQUEST', 'PROFILE_REQUEST'), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['worker_id'], ['gc_workers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('replay_players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('replay_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('player_slot', sa.Integer(), nullable=True),
    sa.Column('hero_id', sa.Integer(), nullable=True),
    sa.Column('item_0', sa.Integer(), nullable=True),
    sa.Column('item_1', sa.Integer(), nullable=True),
    sa.Column('item_2', sa.Integer(), nullable=True),
    sa.Column('item_3', sa.Integer(), nullable=True),
    sa.Column('item_4', sa.Integer(), nullable=True),
    sa.Column('item_5', sa.Integer(), nullable=True),
    sa.Column('kills', sa.Integer(), nullable=True),
    sa.Column('deaths', sa.Integer(), nullable=True),
    sa.Column('assists', sa.Integer(), nullable=True),
    sa.Column('leaver_status', sa.SmallInteger(), nullable=True),
    sa.Column('gold', sa.Integer(), nullable=True),
    sa.Column('last_hits', sa.Integer(), nullable=True),
    sa.Column('denies', sa.Integer(), nullable=True),
    sa.Column('gold_per_min', sa.Integer(), nullable=True),
    sa.Column('xp_per_min', sa.Integer(), nullable=True),
    sa.Column('gold_spent', sa.Integer(), nullable=True),
    sa.Column('hero_damage', sa.Integer(), nullable=True),
    sa.Column('tower_damage', sa.Integer(), nullable=True),
    sa.Column('hero_healing', sa.Integer(), nullable=True),
    sa.Column('level', sa.SmallInteger(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['replay_id'], ['replays.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('searches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('search_query', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.Text(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('replay_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['replay_id'], ['replays.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('replay_ratings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('replay_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('positive', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['replay_id'], ['replays.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('logger', sa.String(length=64), nullable=True),
    sa.Column('level', sa.String(length=16), nullable=True),
    sa.Column('trace', sa.Text(), nullable=True),
    sa.Column('msg', sa.Text(), nullable=True),
    sa.Column('extra', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_by_user_id', sa.Integer(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['resolved_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('replay_downloads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('replay_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['replay_id'], ['replays.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscription_last_match',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('replay_found', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscription',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('replay_favs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('replay_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['replay_id'], ['replays.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('replay_favs')
    op.drop_table('subscription')
    op.drop_table('subscription_last_match')
    op.drop_table('replay_downloads')
    op.drop_table('logs')
    op.drop_table('replay_ratings')
    op.drop_table('searches')
    op.drop_table('replay_players')
    op.drop_table('gc_jobs')
    op.drop_table('replays')
    op.drop_table('gc_workers')
    op.drop_table('users')
    op.drop_table('ugcfiles')
    ### end Alembic commands ###
